# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!
set $super Mod4
set $alt   Mod1

font pango:Open Sans 10
font FontAwesome5Free:style=Solid:pixelsize=18:antialias=false;3
font FontAwesome5Brands:style=Solid:pixelsize=18:antialias=false;3
font pango:DejaVu Sans Mono 8

# Use Mouse+$super to drag floating windows to their wanted position
floating_modifier $super

focus_follows_mouse yes

# kill focused window
bindsym $super+Shift+A kill

# set $menu Menu: (k) kill; each command exit mode
# bindsym $super+$alt+x mode "$menu"
# mode "$menu" {
#         # These bindings trigger as soon as you enter the app mode
#         bindsym k exec kill

#         bindsym Return mode "default"
#         bindsym Escape mode "default"
#         bindsym $super+x mode "default"
# }

# change focus
bindsym $super+Tab focus next
bindsym $super+Shift+Tab focus prev

bindsym $super+b focus left
bindsym $super+n focus down
bindsym $super+p focus up
bindsym $super+f focus right

# move focused window
bindsym $super+Shift+b move left
bindsym $super+Shift+n move down
bindsym $super+Shift+p move up
bindsym $super+Shift+f move right

# split in horizontal orientation
bindsym $super+h split h

# split in vertical orientation
bindsym $super+v split v

# enter fullscreen mode for the focused container
bindsym $super+ctrl+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
# bindsym $super+s layout stacking => I never use that anyway
bindsym $super+t layout tabbed
bindsym $super+s layout toggle split

# toggle tiling / floating
bindsym $super+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $super+space focus mode_toggle

# focus the parent container
bindsym $super+q focus parent

# focus the child container
bindsym $super+Shift+q focus child

# take a screenshoot with selection
bindsym Print --release exec --no-startup-id i3-scrot -s

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.

# set $ws1 ""
# set $ws2 ""
# set $ws3 ""
# set $ws4 ""
# set $ws5 ""
# set $ws6 ""
# set $ws7 "7"
# set $ws8 "8"
# set $ws9 "9"
# set $ws10 "10"

set $ws1  "1"
set $ws2  "2"
set $ws3  "3"
set $ws4  "4"
set $ws5  "5"
set $ws6  "6"
set $ws7  "7"
set $ws8  "8"
set $ws9  "9"
set $ws10 "10"

# 2 screen output
workspace $ws1 output DP-1
workspace $ws1 output DP-2
workspace $ws1 output HDMI-1
workspace $ws1 output HDMI-2
workspace $ws2 output eDP-1
workspace $ws3 output eDP-1
workspace $ws4 output eDP-1
workspace $ws5 output eDP-1
workspace $ws6 output DP-1
workspace $ws6 output DP-2
workspace $ws6 output HDMI-1
workspace $ws6 output HDMI-2


# switch to workspace
bindsym $super+ampersand  workspace $ws1
bindsym $super+eacute     workspace $ws2
bindsym $super+quotedbl   workspace $ws3
bindsym $super+apostrophe workspace $ws4
bindsym $super+parenleft  workspace $ws5
bindsym $super+minus      workspace $ws6
bindsym $super+egrave     workspace $ws7
bindsym $super+underscore workspace $ws8
bindsym $super+ccedilla   workspace $ws9
bindsym $super+agrave     workspace $ws10

# move focused container to workspace
bindsym $super+Shift+1 move container to workspace $ws1
bindsym $super+Shift+2 move container to workspace $ws2
bindsym $super+Shift+3 move container to workspace $ws3
bindsym $super+Shift+4 move container to workspace $ws4
bindsym $super+Shift+5 move container to workspace $ws5
bindsym $super+Shift+6 move container to workspace $ws6
bindsym $super+Shift+7 move container to workspace $ws7
bindsym $super+Shift+8 move container to workspace $ws8
bindsym $super+Shift+9 move container to workspace $ws9
bindsym $super+Shift+0 move container to workspace $ws10

# bindsym $super+1 move workspace to output eDP-1
# bindsym $super+2 move workspace to output DP-1
# bindsym $super+3 move workspace to output HDMI-2

# reload the configuration file
bindsym $super+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $super+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $super+Shift+e exec "i3-nagbar -t warning -f pango:OpenSans:20 -m 'Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
set $resize Resize: (j) left, (k)down, (l)up, (m)right
bindsym $super+r mode "$resize"

mode "$resize" {
         # These bindings trigger as soon as you enter the resize mode

         # Pressing left will shrink the window’s width.
         # Pressing right will grow the window’s width.
         # Pressing up will shrink the window’s height.
         # Pressing down will grow the window’s height.
         bindsym j resize shrink width 6 px or 6 ppt
         bindsym k resize grow height 6 px or 6 ppt
         bindsym l resize shrink height 6 px or 6 ppt
         bindsym m resize grow width 6 px or 6 ppt

         # same bindings, but for the arrow keys
         bindsym Left resize shrink width 6 px or 6 ppt
         bindsym Down resize grow height 6 px or 6 ppt
         bindsym Up resize shrink height 6 px or 6 ppt
         bindsym Right resize grow width 6 px or 6 ppt

         # back to normal: Enter or Escape or $super+r
         bindsym Return mode "default"
         bindsym Escape mode "default"
         bindsym $super+g mode "default"
}

# Theme colors

# Colors set from ~/.Xresources
set_from_resource	$background	background
set_from_resource	$foreground	foreground
set_from_resource	$color0		color0
set_from_resource 	$color1 	color1
set_from_resource 	$color2 	color2
set_from_resource 	$color3 	color3
set_from_resource 	$color4 	color4
set_from_resource 	$color5 	color5
set_from_resource 	$color6		color6
set_from_resource	$color7		color7
set_from_resource	$color8		color8
set_from_resource	$color9		color9
set_from_resource	$color10	color10
set_from_resource	$color11	color11
set_from_resource	$color12	color12
set_from_resource	$color13	color13
set_from_resource	$color14	color14
set_from_resource	$color15	color15

# window title alignement left|center|right
# title_align center

# child_border          BORDER      BACKGROUND  TEXT        INDICATOR   CHILD_BORDER
client.focused         	$color3     $background $color2     $foreground $color3
client.focused_inactive	$color7     $background	$color6     $background	$background
client.unfocused       	$background $color8	$color4     $background	$background
client.urgent		$foreground $color1	$foreground $background	$background
client.placeholder	$foreground $background	$foreground $background	$background
client.background       $background

#polybar
exec_always --no-startup-id $HOME/bin/startsimplebar

#background
exec_always --no-startup-id feh --bg-fill --randomize ~/Media/wallpaper/

# volume controls
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%

bindsym XF86AudioMute        exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute     exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
# fine sound control
bindsym $super+Ctrl+b exec terminal -e 'ncpamixer'

# media controls
bindsym XF86AudioPlay exec "playerctl play-pause"
bindsym XF86AudioStop exec "playerctl pause"
bindsym XF86AudioNext exec "playerctl next"
bindsym XF86AudioPrev exec "playerctl previous"
bindsym $super+Ctrl+space exec "playerctl play-pause"
bindsym $super+Ctrl+n exec "playerctl next"
bindsym $super+Ctrl+p exec "playerctl previous"
# backlight
bindsym XF86MonBrightnessUp   exec brightnessctl set +10%
bindsym XF86MonBrightnessDown exec brightnessctl set -10%
bindsym XF86Display           exec brightnessctl set 50%; exec xrandr --output eDP-1 --primary --auto

# Lock screen
bindsym $super+twosuperior exec --no-startup-id "i3lock-fancy-rapid 5 10 -u -p default"

# between
# bindsym $super+Menu exec --no-startup-id bepo_switch

# browser
assign [class="^qutebrowser"] → $ws4
assign [class="^Chromium"]    → $ws4
assign [class="^next"]        → $ws4
assign [class="^firefox"]     → $ws4


# social
assign [class="^Wire"]        → $ws5
assign [class="^Telegram"]    → $ws5
assign [class="^zoom"]        → $ws5
assign [class="^Slack"]       → $ws5
assign [class="^Element"]     → $ws5
assign [class="^Spectral"]    → $ws5
assign [class="^Signal"]      → $ws5
assign [class="^discord"]     → $ws5
assign [class="^TeamSpeak 3"] → $ws5

# media
# hackish way to sind spotify to ws6
for_window [class="Spotify"]    move window to workspace $ws6
assign [class="^mpv"]         → $ws6

# Open specific applications in floating mode
for_window [title="ncpamixer"] floating enable border pixel 1
for_window [class="Pavucontrol"] floating enable

# cloud
exec --no-startup-id nextcloud &

# touchscreen
## keyboard
# exec --no-startup-id onboard -l fr -a &
## gesture
# exec --no-startup-id touchegg &

# Screen
## check if multiscreen setup and resize touchscreen part
exec_always --no-startup-id $HOME/bin/xrandr-changed &
## screen detection
exec_always --no-startup-id autorandr --change &
## auto rotate screen when pc is turned
# exec --no-startup-id systemctl --user start 2in1screen.service &

# start a terminal
# bindsym $super+Return exec urxvt
bindsym $super+Return exec alacritty

# start an emacs client
bindsym $super+e exec emacsclient -c

# start rofi (program launcher)
# bindsym $super+x exec --no-startup-id rofi -show combi
# start rofi (program launcher)
bindsym $super+x exec --no-startup-id dmenu_recency
bindsym $super+Shift+X exec --no-startup-id morc_menu

# start gopass (password manager with rofi interface)
bindsym $super+y exec --no-startup-id  $HOME/bin/rofi-gopass
# bindsym $super+y exec --no-startup-id  $HOME/bin/rofi-ykman

#start udiskie and bind manager with rofi interface
exec udiskie
bindsym $super+d exec --no-startup-id $HOME/bin/rofi-udiskie

#network manager applet
exec nm-applet

# bluetooth applet
exec blueman-applet

# start notification center
exec_always --no-startup-id dunst&

# start autolock
exec --no-startup-id ~/bin/autolock&

# start clight to auto dim backlight
exec --no-startup-id clight&

# start battery signal
exec --no-startup-id batsignal&

# map capslock to ctrl
exec_always --no-startup-id /usr/bin/setxkbmap -option "ctrl:nocaps"

# tabbed layout for social
for_window [workspace=$ws5] layout tabbed

# start all common social software
# bindsym $super+c exec telegram-desktop; exec slack; exec signal-desktop; exec firefox; exec spotify # ;exec discord


#############################
### settings for i3-gaps: ###
#############################

# disable windows decoration all together
for_window [class="^.*"] border pixel 1

# this seems useless ?
# border around between windows
# default_border pixel 1
# default_floating_border pixel 3
# hide_edge_borders smart

# gaps top    all set $default_gaps_outer
# gaps bottom all set $default_gaps_outer
smart_gaps on
smart_borders on



# Set inner/outer gaps
gaps inner 20
gaps outer 10

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying
# outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or
# 0 (remove gaps for current workspace). If you also press Shift with these
# keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $super+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym $super+g mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $super+g mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $super+g mode "default"
}
